@page "{parentId?}"
@model IndexModel
@{
ViewData["Title"] = "Home";
}

@if(Model.ParentIssue == null)
{
<div class="text-center">
    <h1 class="display-4">Get Help From Your Peers</h1>
</div>
<hr>
}
<div class="row align-items-center">
    <div class="col-xl-9 col-lg-8">
        @if(Model.ParentIssue != null)
        {
        <h1>@Model.ParentIssue.Title</h1>
        <p class="mb-3">
            Keep narrowing down your issue to get the best help.
        </p>
        }
        else
        {
        <h2>First, Let's Break Down Your Problem.</h2>
        <p class="mb-3">
            We live pretty diverse lives. Choose the area that best relates to your issue.
        </p>
        }
    </div>
    <div class="col">
        <input type="text" class="form-control mb-3" placeholder="Filter..." oninput="filterCards(this);" onkeydown="filterCards(this);">
    </div>
</div>
<div class="card-columns">
    @foreach(var issue in Model.ChildIssues)
    {
    <a asp-page="/Index" asp-route-parentId="@issue.Id">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@issue.Title</h5>
                @if (!string.IsNullOrWhiteSpace(issue.Description))
                {
                <p class="card-text">@issue.Description</p>
                }
            </div>
        </div>
    </a>
    }
</div>

<style>
    .card {
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        color: black;
    }

    .card:hover {
        color: #007bff;
        border-color: #007bff;
        cursor: pointer;
    }
</style>

@section Scripts {
<script>
    let cards = document.getElementsByClassName("card");
    for (const card of cards) {
        card.issueTitle = card.querySelector(".card-title").innerHTML.toUpperCase() + card.querySelector(".card-body").innerHTML.toUpperCase();
    }

    let filterCards = (filterElement) => {
        let filterText = filterElement.value.toUpperCase();
        if (filterText === "") {
            for (const card of cards) {
                card.style.display = "inline-block";
            }
        } else {
            for (const card of cards) {
                if (card.issueTitle.includes(filterText) || filterText.includes(card.issueTitle)) {
                    card.style.display = "inline-block";
                } else {
                    card.style.display = "none";
                }
            }
        }
    };

</script>
}
