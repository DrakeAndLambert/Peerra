@page "{id}"
@using Entities
@model ExploreModel
@{
ViewData["Title"] = "Topic Explorer";
var newTopic = new Topic
{
Description = "For when your topic doesn't fit any of the above categories, but belongs in " + Model.ParentTopic.Title + ".",
Id = Model.ParentTopic.Id
};
}

<div class="row align-items-center">
    <div class="col-xl-9 col-lg-8">
        <h1>@Model.ParentTopic.Title</h1>
        <p class="mb-3">
            Keep narrowing down your topic to get the best help.
        </p>
    </div>
    <div class="col">
        <input type="text" class="form-control mb-3" placeholder="Filter..." oninput="filterCards(this.value);" onkeydown="filterCards(this.value);">
    </div>
</div>
<hr class="mt-0">
@if (Model.ChildTopics.Count() == 0) 
{
<h4 class="mb-3 text-muted">There aren't any sub-topics here yet. Help us out by adding one below.</h4>
}
<partial name="Topics/_Cards" for="ChildTopics" />
<hr class="mt-0">
<partial name="Topics/_TopicOptions" for="@newTopic"/>

@section Scripts {
<script>
    let cards = Array.from(document.getElementsByClassName("card-col"));
    for (const card of cards) {
        card.topicTitle = card.querySelector(".card-title").innerHTML.toUpperCase() + card.querySelector(".card-body").innerHTML.toUpperCase();
    }

    let filterCards = (filterText) => {
        filterText = filterText.toUpperCase();
        if (filterText === "") {
            for (const card of cards) {
                card.style.display = "inline-block";
            }
        } else {
            for (const card of cards) {
                if (card.topicTitle.includes(filterText) || filterText.includes(card.topicTitle)) {
                    card.style.display = "inline-block";
                } else {
                    card.style.display = "none";
                }
            }
        }
    };

</script>
}
