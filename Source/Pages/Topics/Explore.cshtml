@page "{id}"
@using Entities
@model ExploreModel
@{
ViewData["Title"] = "Topic Explorer";
}

<h1>@Model.ParentTopic.Title</h1>

<p class="mb-3">
    Keep narrowing down your issue's topic to get the best help, or <a asp-page="/Issues/New" asp-route-id="@Model.ParentTopic.Id">get help with @Model.ParentTopic.Title directly</a>.
</p>
<hr class="mt-0">
@if (Model.ChildTopics.Count() == 0) {
<h4>@Model.ParentTopic.Title doesn't have any sub-topics yet.</h4>
<!-- <p>You can <a asp-page="/Topics/New" asp-route-id="@Model.ParentTopic.Id">make your own</a> or <a asp-page="/Issues/New" asp-route-id="@Model.ParentTopic.Id">get help with @Model.ParentTopic.Title directly</a>.</p> -->
<p>You can <a asp-page="/Issues/New" asp-route-id="@Model.ParentTopic.Id">get help with @Model.ParentTopic.Title directly</a> or go back to explore different topics.</p>
}
else {
<div class="form-inline justify-content-between mb-2">
    <h4 class="mb-2">Narrow Down Your Issue's Topic</h4>
    <input type="text" class="form-control w-auto mb-2" placeholder="Filter..." oninput="filterCards(this.value);" onkeydown="filterCards(this.value);">
</div>
<partial name="Topics/_Cards" for="ChildTopics" />
}
<hr class="mt-0">
<h4 class="mb-3">Can't Narrow Down Your Issue?</h4>
@{
var newTopic = new Topic
{
Title = "Submit Your Issue in " + Model.ParentTopic.Title,
Description = "For when your issue doesn't fit any of the sub-topics above.",
Id = Model.ParentTopic.Id
};
}
<partial name="Topics/_TopicOptions" for="@newTopic" />

@section Scripts {
<script>
    let cards = Array.from(document.getElementsByClassName("card-col"));
    for (const card of cards) {
        card.topicTitle = card.querySelector(".card-title").innerHTML.toUpperCase() + card.querySelector(".card-body").innerHTML.toUpperCase();
    }

    let filterCards = (filterText) => {
        filterText = filterText.toUpperCase();
        if (filterText === "") {
            for (const card of cards) {
                card.style.display = "inline-block";
            }
        } else {
            for (const card of cards) {
                if (card.topicTitle.includes(filterText) || filterText.includes(card.topicTitle)) {
                    card.style.display = "inline-block";
                } else {
                    card.style.display = "none";
                }
            }
        }
    };

</script>
}
